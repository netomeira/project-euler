package problem2;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
public class Principal {
    public static void main(String[] args) {
        System.out.println(formatSequence(4000000).stream().filter(x -> x.intValue() % 2 == 0 ).collect(Collectors.summingInt(Integer::intValue)));
    }

    public static List<Integer> formatSequence(Integer limit){
        List<Integer> sequence = new ArrayList<>();
        sequence.add(1);
        sequence.add(2);

        int aux = 0;

        while (aux < limit) {
            int currentSize = sequence.size();
            aux = sequence.get(currentSize-1) + sequence.get(currentSize-2);
            sequence.add(aux);
        }

        return sequence;
    }
}